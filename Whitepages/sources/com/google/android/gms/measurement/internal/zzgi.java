package com.google.android.gms.measurement.internal;

import com.google.android.gms.auth.api.proxy.AuthApiStatusCodes;
import com.google.firebase.perf.util.Constants;
import com.salesforce.marketingcloud.sfmcsdk.components.http.NetworkManager;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;

public final class zzgi {
    public static final zzgg zzA = zza("measurement.sgtm.upload.batches_retrieval_limit", 5, 5, new zzdt(), false);
    public static final zzgg zzB = zza("measurement.sgtm.upload.min_delay_after_startup", 5000L, 5000L, new zzdu(), false);
    public static final zzgg zzC = zza("measurement.sgtm.upload.min_delay_after_broadcast", 1000L, 1000L, new zzdv(), false);
    public static final zzgg zzD = zza("measurement.sgtm.upload.min_delay_after_background", 600000L, 600000L, new zzdw(), false);
    public static final zzgg zzE = zza("measurement.upload.backoff_period", 43200000L, 43200000L, new zzdy(), false);
    public static final zzgg zzF = zza("measurement.upload.window_interval", 3600000L, 3600000L, new zzdz(), false);
    public static final zzgg zzG = zza("measurement.upload.interval", 3600000L, 3600000L, new zzeb(), false);
    public static final zzgg zzH = zza("measurement.upload.realtime_upload_interval", 10000L, 10000L, new zzec(), false);
    public static final zzgg zzI = zza("measurement.upload.debug_upload_interval", 1000L, 1000L, new zzed(), false);
    public static final zzgg zzJ = zza("measurement.upload.minimum_delay", 500L, 500L, new zzee(), false);
    public static final zzgg zzK = zza("measurement.alarm_manager.minimum_interval", 60000L, 60000L, new zzef(), false);
    public static final zzgg zzL;
    public static final zzgg zzM = zza("measurement.upload.refresh_blacklisted_config_interval", 604800000L, 604800000L, new zzeh(), false);
    public static final zzgg zzN = zza("measurement.upload.initial_upload_delay_time", 15000L, 15000L, new zzei(), false);
    public static final zzgg zzO = zza("measurement.upload.retry_time", 1800000L, 1800000L, new zzek(), false);
    public static final zzgg zzP = zza("measurement.upload.retry_count", 6, 6, new zzem(), false);
    public static final zzgg zzQ = zza("measurement.upload.max_queue_time", 518400000L, 518400000L, new zzen(), false);
    public static final zzgg zzR = zza("measurement.upload.google_signal_max_queue_time", 300000L, 300000L, new zzeo(), false);
    public static final zzgg zzS = zza("measurement.lifetimevalue.max_currency_tracked", 4, 4, new zzep(), false);
    public static final zzgg zzT = zza("measurement.audience.filter_result_max_count", 200, 200, new zzeq(), false);
    public static final zzgg zzU = zza("measurement.upload.max_public_user_properties", 100, 100, (zzge) null, false);
    public static final zzgg zzV;
    public static final zzgg zzW = zza("measurement.upload.max_public_event_params", 100, 100, (zzge) null, false);
    public static final zzgg zzX = zza("measurement.service_client.idle_disconnect_millis", 5000L, 5000L, new zzer(), false);
    public static final zzgg zzY = zza("measurement.service_client.reconnect_millis", 1000L, 1000L, new zzes(), false);
    public static final zzgg zzZ;
    public static final zzgg zza = zza("measurement.ad_id_cache_time", 10000L, 10000L, new zzct(), false);
    public static final zzgg zzaA;
    public static final zzgg zzaB;
    public static final zzgg zzaC;
    public static final zzgg zzaD;
    public static final zzgg zzaE;
    public static final zzgg zzaF;
    public static final zzgg zzaG;
    public static final zzgg zzaH;
    public static final zzgg zzaI = zza("measurement.service.storage_consent_support_version", 203600, 203600, new zzbr(), false);
    public static final zzgg zzaJ;
    public static final zzgg zzaK;
    public static final zzgg zzaL;
    public static final zzgg zzaM;
    public static final zzgg zzaN;
    public static final zzgg zzaO;
    public static final zzgg zzaP;
    public static final zzgg zzaQ;
    public static final zzgg zzaR;
    public static final zzgg zzaS;
    public static final zzgg zzaT;
    public static final zzgg zzaU;
    public static final zzgg zzaV;
    public static final zzgg zzaW;
    public static final zzgg zzaX;
    public static final zzgg zzaY;
    public static final zzgg zzaZ;
    public static final zzgg zzaa = zza("measurement.test.string_flag", "---", "---", new zzeu(), false);
    public static final zzgg zzab = zza("measurement.test.long_flag", -1L, -1L, new zzex(), false);
    public static final zzgg zzac = zza("measurement.test.int_flag", -2, -2, new zzez(), false);
    public static final zzgg zzad;
    public static final zzgg zzae = zza("measurement.experiment.max_ids", 50, 50, new zzfb(), false);
    public static final zzgg zzaf = zza("measurement.upload.max_item_scoped_custom_parameters", 27, 27, new zzfc(), false);
    public static final zzgg zzag = zza("measurement.upload.max_event_parameter_value_length", 500, 500, new zzfd(), true);
    public static final zzgg zzah = zza("measurement.max_bundles_per_iteration", 100, 100, new zzfe(), false);
    public static final zzgg zzai = zza("measurement.sdk.attribution.cache.ttl", 604800000L, 604800000L, new zzff(), false);
    public static final zzgg zzaj = zza("measurement.redaction.app_instance_id.ttl", 7200000L, 7200000L, new zzfg(), false);
    public static final zzgg zzak = zza("measurement.rb.attribution.client.min_ad_services_version", 7, 7, new zzfj(), false);
    public static final zzgg zzal = zza("measurement.dma_consent.max_daily_dcu_realtime_events", 1, 1, new zzfk(), false);
    public static final zzgg zzam = zza("measurement.rb.attribution.uri_scheme", "https", "https", new zzfl(), false);
    public static final zzgg zzan = zza("measurement.rb.attribution.uri_authority", "google-analytics.com", "google-analytics.com", new zzfm(), false);
    public static final zzgg zzao = zza("measurement.rb.attribution.uri_path", "privacy-sandbox/register-app-conversion", "privacy-sandbox/register-app-conversion", new zzfn(), false);
    public static final zzgg zzap = zza("measurement.session.engagement_interval", 3600000L, 3600000L, new zzfo(), false);
    public static final zzgg zzaq = zza("measurement.rb.attribution.app_allowlist", "*", "*", new zzfp(), false);
    public static final zzgg zzar = zza("measurement.rb.attribution.user_properties", "_npa,npa|_fot,fot", "_npa,npa|_fot,fot", new zzfq(), false);
    public static final zzgg zzas = zza("measurement.rb.attribution.event_params", "value|currency", "value|currency", new zzfr(), false);
    public static final zzgg zzat = zza("measurement.rb.attribution.query_parameters_to_remove", "", "", new zzft(), false);
    public static final zzgg zzau = zza("measurement.rb.attribution.max_queue_time", 864000000L, 864000000L, new zzfv(), false);
    public static final zzgg zzav = zza("measurement.rb.attribution.max_retry_delay_seconds", 16, 16, new zzfw(), false);
    public static final zzgg zzaw = zza("measurement.rb.attribution.client.min_time_after_boot_seconds", 90, 90, new zzfx(), false);
    public static final zzgg zzax = zza("measurement.rb.max_trigger_registrations_per_day", 1000, 1000, new zzfz(), false);
    public static final zzgg zzay;
    public static final zzgg zzaz;
    public static final zzgg zzb = zza("measurement.app_uninstalled_additional_ad_id_cache_time", 3600000L, 3600000L, new zzdl(), false);
    public static final zzgg zzba;
    public static final zzgg zzbb;
    public static final zzgg zzbc;
    public static final zzgg zzbd;
    public static final zzgg zzbe;
    public static final zzgg zzbf;
    public static final zzgg zzbg;
    public static final zzgg zzbh;
    public static final zzgg zzbi;
    public static final zzgg zzbj;
    public static final zzgg zzbk;
    public static final zzgg zzbl;
    public static final zzgg zzbm;
    public static final zzgg zzbn;
    public static final zzgg zzbo;
    public static final zzgg zzbp;
    public static final zzgg zzbq;
    public static final zzgg zzbr;
    /* access modifiers changed from: private */
    public static final List zzbs = Collections.synchronizedList(new ArrayList());
    public static final zzgg zzc;
    public static final zzgg zzd;
    public static final zzgg zze = zza("measurement.config.url_scheme", "https", "https", new zzev(), false);
    public static final zzgg zzf = zza("measurement.config.url_authority", "app-measurement.com", "app-measurement.com", new zzfi(), false);
    public static final zzgg zzg = zza("measurement.upload.max_bundles", 100, 100, new zzfu(), false);
    public static final zzgg zzh = zza("measurement.upload.max_batch_size", 65536, 65536, new zzbm(), false);
    public static final zzgg zzi = zza("measurement.upload.max_bundle_size", 65536, 65536, new zzby(), false);
    public static final zzgg zzj = zza("measurement.upload.max_events_per_bundle", 1000, 1000, new zzck(), false);
    public static final zzgg zzk = zza("measurement.upload.max_events_per_day", 100000, 100000, new zzcl(), false);
    public static final zzgg zzl = zza("measurement.upload.max_error_events_per_day", 1000, 1000, new zzcx(), false);
    public static final zzgg zzm = zza("measurement.upload.max_public_events_per_day", 50000, 50000, new zzdc(), false);
    public static final zzgg zzn = zza("measurement.upload.max_conversions_per_day", 10000, 10000, new zzdd(), false);
    public static final zzgg zzo = zza("measurement.upload.max_realtime_events_per_day", 10, 10, new zzdf(), false);
    public static final zzgg zzp = zza("measurement.store.max_stored_events_per_app", 100000, 100000, new zzdg(), false);
    public static final zzgg zzq = zza("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a", new zzdh(), false);
    public static final zzgg zzr = zza("measurement.sgtm.google_signal.url", "https://app-measurement.com/s/d", "https://app-measurement.com/s/d", new zzdi(), false);
    public static final zzgg zzs = zza("measurement.sgtm.service_upload_apps_list", "", "", new zzdj(), false);
    public static final zzgg zzt = zza("measurement.sgtm.upload.backoff_http_codes", "404,429,503,504", "404,429,503,504", new zzdk(), false);
    public static final zzgg zzu = zza("measurement.sgtm.upload.retry_interval", 600000L, 600000L, new zzdm(), false);
    public static final zzgg zzv = zza("measurement.sgtm.upload.retry_max_wait", 21600000L, 21600000L, new zzdn(), false);
    public static final zzgg zzw = zza("measurement.sgtm.batch.retry_interval", 1800000L, 1800000L, new zzdo(), false);
    public static final zzgg zzx = zza("measurement.sgtm.batch.retry_max_wait", 21600000L, 21600000L, new zzdq(), false);
    public static final zzgg zzy = zza("measurement.sgtm.batch.retry_max_count", 10, 10, new zzdr(), false);
    public static final zzgg zzz = zza("measurement.sgtm.upload.max_queued_batches", 5000, 5000, new zzds(), false);

    static {
        Collections.synchronizedSet(new HashSet());
        Long valueOf = Long.valueOf(NetworkManager.MAX_SERVER_RETRY);
        zzc = zza("measurement.monitoring.sample_period_millis", valueOf, valueOf, new zzdx(), false);
        zzd = zza("measurement.config.cache_time", valueOf, 3600000L, new zzej(), false);
        zzL = zza("measurement.upload.stale_data_deletion_interval", valueOf, valueOf, new zzeg(), false);
        Integer valueOf2 = Integer.valueOf(Constants.MAX_URL_LENGTH);
        zzV = zza("measurement.upload.max_event_name_cardinality", valueOf2, valueOf2, (zzge) null, false);
        Boolean bool = Boolean.FALSE;
        zzZ = zza("measurement.test.boolean_flag", bool, bool, new zzet(), false);
        zza("measurement.test.cached_long_flag", -1L, -1L, new zzey(), true);
        Double valueOf3 = Double.valueOf(-3.0d);
        zzad = zza("measurement.test.double_flag", valueOf3, valueOf3, new zzfa(), false);
        zza("measurement.rb.attribution.max_trigger_uris_queried_at_once", 0, 0, new zzfy(), false);
        Boolean bool2 = Boolean.TRUE;
        zzay = zza("measurement.config.bundle_for_all_apps_on_backgrounded", bool2, bool2, new zzga(), false);
        zzaz = zza("measurement.config.notify_trigger_uris_on_backgrounded", bool2, bool2, new zzgb(), false);
        Integer valueOf4 = Integer.valueOf(AuthApiStatusCodes.AUTH_API_INVALID_CREDENTIALS);
        zzaA = zza("measurement.rb.attribution.notify_app_delay_millis", valueOf4, valueOf4, new zzgc(), false);
        zzaB = zza("measurement.quality.checksum", bool, bool, (zzge) null, false);
        zzaC = zza("measurement.audience.use_bundle_end_timestamp_for_non_sequence_property_filters", bool, bool, new zzbk(), false);
        zzaD = zza("measurement.audience.refresh_event_count_filters_timestamp", bool, bool, new zzbl(), false);
        zzaE = zza("measurement.audience.use_bundle_timestamp_for_event_count_filters", bool, bool, new zzbn(), true);
        zzaF = zza("measurement.sdk.collection.last_deep_link_referrer_campaign2", bool, bool, new zzbo(), false);
        zzaG = zza("measurement.integration.disable_firebase_instance_id", bool, bool, new zzbp(), false);
        zzaH = zza("measurement.collection.service.update_with_analytics_fix", bool, bool, new zzbq(), false);
        zzaJ = zza("measurement.service.store_null_safelist", bool2, bool2, new zzbs(), false);
        zzaK = zza("measurement.service.store_safelist", bool2, bool2, new zzbt(), false);
        zzaL = zza("measurement.session_stitching_token_enabled", bool, bool, new zzbv(), false);
        zzaM = zza("measurement.sgtm.upload_queue", bool2, bool2, new zzbw(), false);
        zzaN = zza("measurement.sgtm.google_signal.enable", bool2, bool2, new zzbx(), false);
        zzaO = zza("measurement.sgtm.upload_on_uninstall", bool2, bool2, new zzbz(), false);
        zzaP = zza("measurement.sgtm.no_proxy.service", bool, bool, new zzca(), false);
        zzaQ = zza("measurement.sgtm.service.batching_on_backgrounded", bool, bool, new zzcb(), false);
        zzaR = zza("measurement.sgtm.no_proxy.client2", bool, bool, new zzcc(), true);
        zzaS = zza("measurement.sgtm.client.upload_on_backgrounded.dev", bool, bool, new zzcd(), true);
        zzaT = zza("measurement.sgtm.client.scion_upload_action", bool2, bool2, new zzce(), true);
        zzaU = zza("measurement.gmscore_client_telemetry", bool, bool, new zzcg(), false);
        zzaV = zza("measurement.rb.attribution.service", bool2, bool2, new zzch(), true);
        zzaW = zza("measurement.rb.attribution.client2", bool2, bool2, new zzci(), true);
        zzaX = zza("measurement.rb.attribution.uuid_generation", bool2, bool2, new zzcj(), false);
        zzaY = zza("measurement.rb.attribution.enable_trigger_redaction", bool2, bool2, new zzde(), false);
        zza("measurement.rb.attribution.followup1.service", bool, bool, new zzdp(), false);
        zzaZ = zza("measurement.rb.attribution.retry_disposition", bool, bool, new zzea(), false);
        zzba = zza("measurement.client.sessions.enable_fix_background_engagement", bool, bool, new zzel(), false);
        zzbb = zza("measurement.fix_engagement_on_reset_analytics_data", bool2, bool2, new zzew(), false);
        zzbc = zza("measurement.set_default_event_parameters_propagate_clear.service.dev", bool, bool, new zzfh(), false);
        zzbd = zza("measurement.set_default_event_parameters_propagate_clear.client.dev", bool, bool, new zzfs(), false);
        zzbe = zza("measurement.set_default_event_parameters.fix_deferred_analytics_collection", bool2, bool2, new zzgd(), false);
        zzbf = zza("measurement.chimera.parameter.service", bool2, bool2, new zzbu(), false);
        zzbg = zza("measurement.service.ad_impression.convert_value_to_double", bool2, bool2, new zzcf(), false);
        zza("measurement.rb.attribution.service.enable_max_trigger_uris_queried_at_once", bool2, bool2, new zzcm(), false);
        zza("measurement.remove_conflicting_first_party_apis.dev", bool, bool, new zzcn(), false);
        zzbh = zza("measurement.rb.attribution.service.trigger_uris_high_priority", bool2, bool2, new zzco(), false);
        zzbi = zza("measurement.backfill_session_ids.service", bool, bool, new zzcp(), false);
        zzbj = zza("measurement.tcf.consent_fix", bool, bool, new zzcq(), false);
        zzbk = zza("measurement.experiment.enable_phenotype_experiment_reporting", bool2, bool2, new zzcr(), false);
        zzbl = zza("measurement.set_default_event_parameters.fix_service_request_ordering", bool, bool, new zzcs(), false);
        zzbm = zza("measurement.set_default_event_parameters.fix_app_update_logging", bool2, bool2, new zzcu(), false);
        zzbn = zza("measurement.fix_high_memory.prune_ees_config", bool, bool, new zzcv(), false);
        zzbo = zza("measurement.upload_controller.wait_initialization", bool, bool, new zzcw(), true);
        zzbp = zza("measurement.admob_plus_removal.client.dev", bool, bool, new zzcy(), false);
        zza("measurement.admob_plus_removal.service", bool, bool, new zzcz(), false);
        zzbq = zza("measurement.service.fix_stop_bundling_bug", bool, bool, new zzda(), false);
        zzbr = zza("measurement.fix_params_logcat_spam", bool2, bool2, new zzdb(), false);
    }

    static zzgg zza(String str, Object obj, Object obj2, zzge zzge, boolean z) {
        zzgg zzgg = new zzgg(str, obj, obj2, zzge, (zzgh) null);
        if (z) {
            zzbs.add(zzgg);
        }
        return zzgg;
    }
}
